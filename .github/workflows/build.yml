name: Build

on:
  push: ~
  pull_request: ~
  release:
    types: [created]
  schedule:
    -
      cron: "0 1 * * 6" # Run at 1am every Saturday

jobs:
  tests:
    runs-on: ubuntu-20.04

    name: "PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}, MySQL ${{ matrix.mysql }}"

    strategy:
      fail-fast: false
      matrix:
        php: [7.4, 7.3, 7.2]
        symfony: [4.4.*]
        node: [10.x]
        mysql: [5.7, 8.0]

        exclude:
          -
            php: 7.3
            mysql: 8.0

    env:
      APP_ENV: test_cached
      ECS_VERSION: 7:0

    steps:
      -
        uses: actions/checkout@v2

      -
        name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          extensions: intl
          tools: symfony
          coverage: none

      -
        name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "${{ matrix.node }}"

      -
        name: Shutdown default MySQL
        run: sudo service mysql stop

      -
        name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: "${{ matrix.mysql }}"
          mysql root password: "root"

      -
        name: Output PHP version for Symfony CLI
        run: php -v | head -n 1 | awk '{ print $2 }' > .php-version

      -
        name: Install certificates
        run: symfony server:ca:install

      -
        name: Run Chrome Headless
        run: google-chrome-stable --enable-automation --disable-background-networking --no-default-browser-check --no-first-run --disable-popup-blocking --disable-default-apps --allow-insecure-localhost --disable-translate --disable-extensions --no-sandbox --enable-features=Metal --headless --remote-debugging-port=9222 --window-size=2880,1800 --proxy-server='direct://' --proxy-bypass-list='*' http://127.0.0.1 > /dev/null 2>&1 &

      -
        name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      -
        name: Cache Composer
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-
      -
        name: Install PHP dependencies
        run: composer install --no-interaction

      -
        name: Prepare test application assets
        run: |
          bin/console assets:install public -vvv

      -
        name: Prepare test application cache
        run: bin/console cache:warmup -vvv

      -
        name: Load fixtures
        run: bin/console sylius:fixtures:load -n

      -
        name: Validate composer.json
        run: composer validate --ansi --strict

      -
        name: Run security check
        run: symfony security:check

      -
        name: Run PHPStan
        run: vendor/bin/phpstan analyse -c phpstan.neon -l max src/

      -
        name: Run PHPUnit
        run: vendor/bin/phpunit --colors=always
